{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madupa Dilshan\\\\Desktop\\\\project\\\\blog\\\\frontend\\\\src\\\\context\\\\PostContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostContext = /*#__PURE__*/createContext();\nexport const PostProvider = ({\n  children\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const getPosts = async () => {\n    try {\n      setLoading(true);\n      const res = await api.get('/posts');\n      setPosts(res.data);\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Server Error');\n      setLoading(false);\n    }\n  };\n  const createPost = async formData => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const res = await api.post('/posts', formData, config);\n      setPosts([res.data, ...posts]);\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      throw ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Server Error';\n    }\n  };\n  const updatePost = async (id, formData) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const res = await api.put(`/posts/${id}`, formData, config);\n      setPosts(posts.map(post => post._id === id ? res.data : post));\n      return res.data;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      throw ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Server Error';\n    }\n  };\n  const deletePost = async id => {\n    try {\n      await api.delete(`/posts/${id}`);\n      setPosts(posts.filter(post => post._id !== id));\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      throw ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.error) || 'Server Error';\n    }\n  };\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      posts,\n      loading,\n      error,\n      getPosts,\n      createPost,\n      updatePost,\n      deletePost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PostProvider, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostProvider;\nexport const usePost = () => {\n  _s2();\n  return useContext(PostContext);\n};\n_s2(usePost, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","PostContext","PostProvider","children","_s","posts","setPosts","loading","setLoading","error","setError","getPosts","res","get","data","err","_err$response","_err$response$data","response","createPost","formData","config","headers","post","_err$response2","_err$response2$data","updatePost","id","put","map","_id","_err$response3","_err$response3$data","deletePost","delete","filter","_err$response4","_err$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePost","_s2","$RefreshReg$"],"sources":["C:/Users/Madupa Dilshan/Desktop/project/blog/frontend/src/context/PostContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\n\r\nconst PostContext = createContext();\r\n\r\nexport const PostProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await api.get('/posts');\r\n      setPosts(res.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Server Error');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createPost = async (formData) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n      const res = await api.post('/posts', formData, config);\r\n      setPosts([res.data, ...posts]);\r\n      return res.data;\r\n    } catch (err) {\r\n      throw err.response?.data?.error || 'Server Error';\r\n    }\r\n  };\r\n\r\n  const updatePost = async (id, formData) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n      const res = await api.put(`/posts/${id}`, formData, config);\r\n      setPosts(posts.map(post => post._id === id ? res.data : post));\r\n      return res.data;\r\n    } catch (err) {\r\n      throw err.response?.data?.error || 'Server Error';\r\n    }\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      setPosts(posts.filter(post => post._id !== id));\r\n    } catch (err) {\r\n      throw err.response?.data?.error || 'Server Error';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <PostContext.Provider\r\n      value={{\r\n        posts,\r\n        loading,\r\n        error,\r\n        getPosts,\r\n        createPost,\r\n        updatePost,\r\n        deletePost\r\n      }}\r\n    >\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePost = () => useContext(PostContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}